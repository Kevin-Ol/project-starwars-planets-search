{"version":3,"sources":["context/FilterContext.js","components/Table.js","components/Header.js","hooks/useData.js","context/FilterProvider.js","App.js","index.js"],"names":["FilterContext","createContext","Table","useContext","filters","order","column","sort","tableHeadData","data","filteredList","a","b","Number","orderString","reverse","map","dataColumn","dataIndex","key","planet","planetIndex","data-testid","className","join","Header","columnOptions","addFilter","rmvFilter","handleOrder","setName","filterByNumericValues","name","filterByName","useState","setColumn","comparison","setComparison","number","setNumber","sortColumn","setSortColumn","sortOrder","setsortOrder","availableColumns","filter","option","item","includes","useEffect","type","placeholder","value","onChange","target","htmlFor","id","onClick","min","index","useData","planets","setPlanets","setTableHeadData","fetch","response","json","results","resultsWithoutResidents","residents","Object","keys","fetchAPI","FilterProvider","children","numericFilters","setNumericFilters","setOrder","setFilteredList","filteredPlanets","toLowerCase","forEach","newFilter","removed","params","Provider","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c6df014.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst FilterContext = createContext();\n\nexport default FilterContext;\n","import React, { useContext } from 'react';\nimport FilterContext from '../context/FilterContext';\n\nfunction Table() {\n  const { filters: { order: { column, sort } }, data: { tableHeadData },\n    filteredList } = useContext(FilterContext);\n\n  function orderString(a, b) {\n    if (a[column] < b[column]) {\n      const oneNegative = -1;\n      return oneNegative;\n    }\n    if (a[column] > b[column]) {\n      return 1;\n    }\n    return 0;\n  }\n\n  filteredList.sort((a, b) => {\n    if (Number(a[column])) {\n      return a[column] - b[column];\n    }\n    return orderString(a, b);\n  });\n\n  if (sort === 'DESC') {\n    filteredList.reverse();\n  }\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          { tableHeadData.map((dataColumn, dataIndex) => (\n            <th key={ dataIndex }>{dataColumn}</th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        { filteredList.map((planet, planetIndex) => (\n          <tr key={ planetIndex }>\n            {tableHeadData.map((dataColumn, dataIndex) => {\n              if (dataColumn === 'name') {\n                return (\n                  <td\n                    key={ dataIndex }\n                    data-testid=\"planet-name\"\n                  >\n                    { planet[dataColumn]}\n                  </td>);\n              }\n              if (dataColumn === 'films') {\n                return (\n                  <td\n                    key={ dataIndex }\n                    data-testid=\"planet-name\"\n                    className=\"films\"\n                  >\n                    { planet[dataColumn].join(' ')}\n                  </td>);\n              }\n              return <td key={ dataIndex }>{ planet[dataColumn]}</td>;\n            })}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default Table;\n","import React, { useContext, useEffect, useState } from 'react';\nimport FilterContext from '../context/FilterContext';\n\nfunction Header() {\n  const columnOptions = ['population', 'orbital_period', 'diameter',\n    'rotation_period', 'surface_water'];\n  const comparisonOptions = ['maior que', 'menor que', 'igual a'];\n\n  const { addFilter, rmvFilter, handleOrder, setName,\n    data: { tableHeadData },\n    filters: { filterByNumericValues, filterByName: { name } },\n  } = useContext(FilterContext);\n\n  const [column, setColumn] = useState(columnOptions[0]);\n  const [comparison, setComparison] = useState('maior que');\n  const [number, setNumber] = useState('');\n  const [sortColumn, setSortColumn] = useState('name');\n  const [sortOrder, setsortOrder] = useState('ASC');\n\n  const availableColumns = columnOptions.filter((option) => !filterByNumericValues\n    .map((item) => item.column).includes(option));\n\n  const handleFilter = () => {\n    if (number) {\n      addFilter({ column, comparison, value: number });\n    }\n  };\n\n  const firstColumn = () => setColumn(availableColumns[0]);\n\n  useEffect(firstColumn, [filterByNumericValues]);\n\n  const handleSort = () => handleOrder({ column: sortColumn, sort: sortOrder });\n\n  return (\n    <header>\n      <h1>Starwars Planets Search</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Digite um planeta\"\n        data-testid=\"name-filter\"\n        value={ name }\n        onChange={ ({ target: { value } }) => setName(value) }\n      />\n      <div>\n        <select\n          data-testid=\"column-sort\"\n          value={ sortColumn }\n          onChange={ ({ target: { value } }) => setSortColumn(value) }\n        >\n          {tableHeadData.map((option) => (\n            <option value={ option } key={ option }>{option}</option>\n          ))}\n        </select>\n        <label htmlFor=\"ASC\">\n          <input\n            type=\"radio\"\n            id=\"ASC\"\n            name=\"sort\"\n            value=\"ASC\"\n            data-testid=\"column-sort-input-asc\"\n            onClick={ ({ target: { value } }) => setsortOrder(value) }\n          />\n          Crescente\n        </label>\n        <label htmlFor=\"DESC\">\n          <input\n            type=\"radio\"\n            id=\"DESC\"\n            name=\"sort\"\n            value=\"DESC\"\n            data-testid=\"column-sort-input-desc\"\n            onClick={ ({ target: { value } }) => setsortOrder(value) }\n          />\n          Decrescente\n        </label>\n        <button type=\"button\" data-testid=\"column-sort-button\" onClick={ handleSort }>\n          Ordenar\n        </button>\n      </div>\n      <div>\n        <select\n          data-testid=\"column-filter\"\n          value={ column }\n          onChange={ ({ target: { value } }) => setColumn(value) }\n        >\n          {availableColumns.map((option) => (\n            <option value={ option } key={ option }>{option}</option>\n          ))}\n        </select>\n        <select\n          data-testid=\"comparison-filter\"\n          value={ comparison }\n          onChange={ ({ target: { value } }) => setComparison(value) }\n        >\n          {comparisonOptions.map((option) => (\n            <option value={ option } key={ option }>{option}</option>\n          ))}\n        </select>\n        <input\n          type=\"number\"\n          min=\"0\"\n          data-testid=\"value-filter\"\n          value={ number }\n          onChange={ ({ target: { value } }) => setNumber(value) }\n        />\n        <button type=\"button\" data-testid=\"button-filter\" onClick={ handleFilter }>\n          Filtrar\n        </button>\n      </div>\n      {filterByNumericValues.map((filter, index) => (\n        <div data-testid=\"filter\" key={ index }>\n          <p>\n            Remove\n            <strong>\n              {` ${filter.column} `}\n            </strong>\n            filter\n          </p>\n          <button type=\"button\" onClick={ () => rmvFilter(filter) }>\n            X\n          </button>\n        </div>\n      ))}\n    </header>\n  );\n}\n\nexport default Header;\n","import { useState, useEffect } from 'react';\n\nfunction useData() {\n  const [planets, setPlanets] = useState([]);\n  const [tableHeadData, setTableHeadData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      const API_URL = 'https://swapi-trybe.herokuapp.com/api/planets/';\n      const response = await fetch(API_URL);\n      const { results } = await response.json();\n      const resultsWithoutResidents = results.map((planet) => {\n        delete planet.residents;\n        return planet;\n      });\n      setPlanets(resultsWithoutResidents);\n      setTableHeadData(Object.keys(resultsWithoutResidents[0]));\n    };\n    fetchAPI();\n  }, []);\n  return [planets, tableHeadData];\n}\n\nexport default useData;\n","import React, { useEffect, useState } from 'react';\nimport propTypes from 'prop-types';\nimport FilterContext from './FilterContext';\nimport useData from '../hooks/useData';\n\nfunction FilterProvider({ children }) {\n  const [planets, tableHeadData] = useData();\n  const [name, setName] = useState('');\n  const [numericFilters, setNumericFilters] = useState([]);\n  const [order, setOrder] = useState({\n    column: 'name',\n    sort: 'ASC',\n  });\n  const [filteredList, setFilteredList] = useState([]);\n\n  const addFilter = (newFilter) => setNumericFilters(\n    [...numericFilters, newFilter],\n  );\n\n  const rmvFilter = (removed) => setNumericFilters(\n    [...numericFilters.filter((filter) => filter.column !== removed.column)],\n  );\n\n  const handleOrder = (params) => setOrder({ ...params });\n\n  useEffect(() => {\n    let filteredPlanets = [...planets];\n\n    if (name) {\n      filteredPlanets = filteredPlanets.filter((planet) => planet.name.toLowerCase()\n        .includes(name.toLowerCase()));\n    }\n\n    if (numericFilters) {\n      numericFilters.forEach(({ column, comparison, value }) => {\n        filteredPlanets = filteredPlanets.filter((planet) => {\n          if (comparison === 'maior que') {\n            return Number(planet[column]) > value;\n          }\n          if (comparison === 'menor que') {\n            return Number(planet[column]) < value;\n          }\n          return planet[column] === value;\n        });\n      });\n    }\n    setFilteredList([...filteredPlanets]);\n  }, [planets, name, numericFilters]);\n\n  const value = {\n    filters: {\n      filterByName: {\n        name,\n      },\n      filterByNumericValues: numericFilters,\n      order,\n    },\n    data: {\n      planets,\n      tableHeadData,\n    },\n    filteredList,\n    addFilter,\n    rmvFilter,\n    handleOrder,\n    setName,\n  };\n\n  return (\n    <FilterContext.Provider value={ value }>\n      {children}\n    </FilterContext.Provider>\n  );\n}\n\nFilterProvider.propTypes = {\n  children: propTypes.oneOfType([propTypes.node,\n    propTypes.arrayOf(propTypes.node)]).isRequired,\n};\n\nexport default FilterProvider;\n","import React from 'react';\nimport './App.css';\nimport { Header, Table } from './components';\nimport FilterProvider from './context/FilterProvider';\n\nfunction App() {\n  return (\n    <FilterProvider>\n      <Header />\n      <Table />\n    </FilterProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}